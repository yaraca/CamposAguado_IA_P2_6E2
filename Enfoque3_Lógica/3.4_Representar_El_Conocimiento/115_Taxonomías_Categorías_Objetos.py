#Taxonom칤as: Categor칤as y Objetos
#es una estructura jer치rquica que organiza conceptos u objetos en categor칤as de forma ordenada. 
#Se utiliza para representar el conocimiento de un dominio, facilitando la clasificaci칩n y el razonamiento.
#Componentes:
# Categor칤as (Clases): Agrupaciones generales (Ej. "Animal", "Veh칤culo").
# Subcategor칤as: M치s espec칤ficas (Ej. "Mam칤fero", "Reptil").
# Objetos (Instancias): Elementos concretos (Ej. "Le칩n", "Tigre").
#Funci칩n: 
# Representar conocimiento de forma estructurada.
# Facilitar inferencias (ej: Si "Perro" es un "Mam칤fero", entonces respira aire).
# Base de sistemas expertos, motores de b칰squeda y clasificadores.
#Aplicaciones: cladsificaci칩n biol칩gica, organizaci칩n de informaci칩n, sistemas de recomendaci칩n.

#Ejemplo de Taxonom칤a: Categor칤as y Objetos

# Clase base para representar una categor칤a general
class Categoria:
    def __init__(self, nombre, padre=None):
        self.nombre = nombre       # Nombre de la categor칤a
        self.padre = padre         # Categor칤a padre (si existe)
        self.subcategorias = []   # Lista de subcategor칤as
        self.objetos = []         # Lista de objetos (instancias)

        # Si hay categor칤a padre, se agrega esta como subcategor칤a
        if padre:
            padre.subcategorias.append(self)

    #funci칩n para agregar un objeto a la categor칤a
    def agregar_objeto(self, objeto):
        self.objetos.append(objeto) #agrega el objeto a la lista de objetos

    #funci칩n para imprimir toda la jerarqu칤a de categor칤as
    def imprimir(self, nivel=0): #imprime la jerarqu칤a de categor칤as
        print("  " * nivel + f"游늭 {self.nombre}") 
        for objeto in self.objetos: #imprime los objetos de la categor칤a
            print("  " * (nivel + 1) + f"游댳 {objeto}")
        for sub in self.subcategorias: #recorre las subcategor칤as
            sub.imprimir(nivel + 1) #llama a la funci칩n imprimir de la subcategor칤a

#crear la taxonom칤a para representar animales
raiz = Categoria("Animal")

#subcategor칤as
mamifero = Categoria("Mam칤fero", raiz) #subcategor칤a de Animal
ave = Categoria("Ave", raiz) #subcategor칤a de Animal

#Sub-subcategor칤as
felino = Categoria("Felino", mamifero) #subcategor칤a de Mam칤fero
canino = Categoria("Canino", mamifero) #subcategor칤a de Mam칤fero

#Objetos (instancias)
felino.agregar_objeto("Le칩n") #agrega el objeto Le칩n a la subcategor칤a Felino
felino.agregar_objeto("Tigre") #agrega el objeto Tigre a la subcategor칤a Felino
canino.agregar_objeto("Perro") #agrega el objeto Perro a la subcategor칤a Canino
ave.agregar_objeto("츼guila") #agrega el objeto 츼guila a la subcategor칤a Ave
ave.agregar_objeto("Paloma") #agrega el objeto Paloma a la subcategor칤a Ave

#Mostrar la taxonom칤a
print("Taxonom칤a generada:")
raiz.imprimir()

#Ejemplo de salida:
# Taxonom칤a generada:
# 游늭 Animal
#   游늭 Mam칤fero
#     游늭 Felino
#       游댳 Le칩n
#       游댳 Tigre
#     游늭 Canino
#       游댳 Perro
#   游늭 Ave
#     游댳 츼guila
#     游댳 Paloma
#En este ejemplo, la clase Categoria representa una categor칤a general, que puede tener subcategor칤as y objetos.
# La funci칩n imprimir muestra la jerarqu칤a de categor칤as y objetos de forma estructurada.
# La taxonom칤a generada representa una jerarqu칤a de animales, donde cada categor칤a puede tener subcategor칤as y objetos espec칤ficos.
# Esta estructura permite organizar y clasificar el conocimiento de manera eficiente, facilitando la comprensi칩n y el razonamiento sobre los objetos y sus relaciones.
